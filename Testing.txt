
Cpsc 415 assignment 3 test documentation


1. Test showing prioritization and signals interrupting each other.
For test implementations view function "test_signal_priority" in user.c
Tests:
1. create process 1
2. create process 2
3. process 1 goes to sleep
4. process 2 installs handlers for signals 0,8,30
5. process 2 calls syswait and waits for process 1 to exit leading to a blocked state
6. process 1 signals 8, 0, 30(in-order) to process 2
7. assert that process 2 unblocks and executes signals 30, 8, 0 in-order.
   Also, assert that the return value for syswait is -666

2. syssighandler() test case
For test implementations view function "test_syssighandler" in user.c
Tests:
1. assert that invalid signum -1 returns -1
2. assert that invalid signum MAX_SIG+1 return -1
3. assert that invalid new sighandler address maxaddr + 1 returns -2
4. assert that invalid old sighandler address maxaddr + 1 returns -3
5. assert that valid inputs for syssighandler returns 0

3. syskill() test case
For test implementations view function "test_syskill1" in user.c
Tests:
1. install signal handlers for signal 8 and 30
2. assert that a non-existing pid 4 returns -514
3. assert that invalid signum -1 returns -583
4. assert that invalid signum MAX_SIG returns -583
5. signal 8 and 30 to itself and assert that signals  8 and 30 executes

4. syssigwait() test case
This test case is covered in test #1. View test 5 and 7 under test #1



